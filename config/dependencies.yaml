# OpsKit 依赖管理配置
# 定义系统依赖和不同环境下的包名映射

# 系统依赖定义
system_dependencies:
  mysql-client:
    description: MySQL client tools (mysql, mysqldump)
    packages:
      ubuntu: mysql-client
      debian: mysql-client
      centos: mysql
      rhel: mysql
      fedora: mysql
      arch: mysql
      macos: mysql-client
    commands: [mysql, mysqldump]
    
  postgresql-client:
    description: PostgreSQL client tools (psql, pg_dump)
    packages:
      ubuntu: postgresql-client
      debian: postgresql-client
      centos: postgresql
      rhel: postgresql
      fedora: postgresql
      arch: postgresql
      macos: postgresql
    commands: [psql, pg_dump]
    
  network-tools:
    description: Network analysis tools
    packages:
      ubuntu: net-tools
      debian: net-tools
      centos: net-tools
      rhel: net-tools
      fedora: net-tools
      arch: net-tools
      macos: null  # Built-in
    commands: [netstat, ss, ping]
    
  nmap:
    description: Network scanner
    packages:
      ubuntu: nmap
      debian: nmap
      centos: nmap
      rhel: nmap
      fedora: nmap
      arch: nmap
      macos: nmap
    commands: [nmap]
    
  git:
    description: Git version control
    packages:
      ubuntu: git
      debian: git
      centos: git
      rhel: git
      fedora: git
      arch: git
      macos: git
    commands: [git]
    
  curl:
    description: HTTP client
    packages:
      ubuntu: curl
      debian: curl
      centos: curl
      rhel: curl
      fedora: curl
      arch: curl
      macos: null  # Built-in
    commands: [curl]
    
  jq:
    description: JSON processor
    packages:
      ubuntu: jq
      debian: jq
      centos: jq
      rhel: jq
      fedora: jq
      arch: jq
      macos: jq
    commands: [jq]
    
  docker:
    description: Docker containerization platform
    packages:
      ubuntu: docker.io
      debian: docker.io
      centos: docker
      rhel: docker
      fedora: docker
      arch: docker
      macos: docker  # Docker Desktop
    commands: [docker]
    
  kubectl:
    description: Kubernetes command-line tool
    packages:
      ubuntu: kubectl  # 需要先添加 Kubernetes APT repository
      debian: kubectl
      centos: kubectl  # 需要先添加 Kubernetes YUM repository
      rhel: kubectl
      fedora: kubectl
      arch: kubectl
      macos: kubectl
    commands: [kubectl]
    install_notes:
      ubuntu: "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -"
      debian: "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -"
      centos: "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      rhel: "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      fedora: "sudo dnf install -y kubectl"
      arch: "sudo pacman -S kubectl"
      macos: "brew install kubectl"
      
  krew:
    description: kubectl plugin manager (optional but recommended)
    packages:
      ubuntu: null  # Manual installation required
      debian: null
      centos: null
      rhel: null
      fedora: null
      arch: null
      macos: null
    commands: [kubectl-krew]
    install_notes:
      all: "Install via: (set -x; cd \"$(mktemp -d)\" && OS=\"$(uname | tr '[:upper:]' '[:lower:]')\" && ARCH=\"$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\\(arm\\)\\(64\\)\\?.*/\\1\\2/' -e 's/aarch64$/arm64/')\" && KREW=\"krew-${OS}_${ARCH}\" && curl -fsSLO \"https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz\" && tar zxvf \"${KREW}.tar.gz\" && ./${KREW} install krew)"

# 包管理器检测顺序
package_managers:
  ubuntu: [apt, apt-get]
  debian: [apt, apt-get]
  centos: [dnf, yum]
  rhel: [dnf, yum]
  fedora: [dnf, yum]
  arch: [pacman]
  opensuse: [zypper]
  macos: [brew, port]

# 全局设置
settings:
  auto_install: true  # 是否自动安装系统依赖（默认仅提示）
  check_commands: true  # 检查命令是否可用
  suggest_install: true  # 提供安装建议